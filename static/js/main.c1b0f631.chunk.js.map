{"version":3,"sources":["Pages/Create/CreatePost.js","Common/Header.js","Common/Loader.js","Common/Posts.js","Pages/Disliked/Disliked.js","Pages/Home/Home.js","Pages/Liked/Liked.js","App.js","index.js"],"names":["CreatePost","history","useHistory","nameRef","useRef","companyNameRef","titleRef","bodyRef","location","useLocation","useState","currentPostId","setCurrentPostId","allPosts","useContext","AllPostContext","useEffect","state","postId","forEach","post","id","current","value","name","companyName","title","body","console","log","changePost","ChangePostContext","Form","onSubmit","event","push","handleChangePost","className","style","height","Card","Header","fontSize","Control","ref","placeholder","Body","as","rows","Footer","Button","type","onClick","goBack","searchRef","search","SearchContext","SearchValueContext","Navbar","expand","Brand","to","Toggle","Collapse","Nav","FormControl","onChange","Loader","Posts","showOnly","loading","LoadingContext","likePost","LikePostContext","dislikePost","DislikePostContext","searchValue","deletePost","DeletePostContext","filter","liked","disliked","getHighlightedText","text","highlight","parts","split","RegExp","map","part","i","toLowerCase","backgroundColor","Container","index","cursor","color","Disliked","Home","message","MessageContext","changeMessage","ChangeMessageContext","show","setShow","handleClose","Modal","onHide","Title","CloseOutlined","Liked","React","createContext","App","setAllUsers","setAllPosts","copyOfPosts","setCopyOfPosts","setLoading","setSearchValue","setMessage","maxId","setMaxId","fetchData","a","fetchAllUsers","users","fetchAllPosts","posts","fetch","method","res","json","user","userId","company","mounted","then","currentAllPosts","Provider","currentPosts","reg","match","path","component","preventDefault","target","unshift","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b0f631.chunk.js","sourcesContent":["import { Card, Form, Button } from \"react-bootstrap\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\n\r\nimport React, { useRef } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { AllPostContext, ChangePostContext } from \"../../App\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const CreatePost = () => {\r\n  const history = useHistory();\r\n  const nameRef = useRef();\r\n  const companyNameRef = useRef();\r\n  const titleRef = useRef();\r\n  const bodyRef = useRef();\r\n  const location = useLocation();\r\n  const [currentPostId, setCurrentPostId] = useState(0);\r\n  const allPosts = useContext(AllPostContext);\r\n  useEffect(() => {\r\n    if (location.state && location.state.postId) {\r\n      allPosts.forEach((post) => {\r\n        if (location.state.postId == post.id) {\r\n          nameRef.current.value = post.name;\r\n          companyNameRef.current.value = post.companyName;\r\n          titleRef.current.value = post.title;\r\n          bodyRef.current.value = post.body;\r\n          setCurrentPostId(post.id);\r\n        }\r\n      });\r\n    }\r\n    console.log(currentPostId);\r\n  }, []);\r\n  const changePost = useContext(ChangePostContext);\r\n  const handleChangePost = (event, postId) => {\r\n    changePost(event, postId);\r\n    history.push(\"home\");\r\n  };\r\n  return (\r\n    <>\r\n      <Form onSubmit={(event) => handleChangePost(event, currentPostId)}>\r\n        <div\r\n          className=\"container-div d-flex justify-content-center align-items-center\"\r\n          style={{ height: \"100vh\" }}\r\n        >\r\n          <Card className=\"post-card\">\r\n            <Card.Header>\r\n              <div className=\"d-flex justify-content-between\">\r\n                {/* <div className=\"d-flex align-items-center\"> */}\r\n                <div>\r\n                  <AccountCircleOutlinedIcon style={{ fontSize: \"250%\" }} />\r\n                </div>\r\n                <div className=\"d-flex mx-2 justify-content-between w-100\">\r\n                  <div>\r\n                    <Form.Control\r\n                      ref={nameRef}\r\n                      placeholder=\"Name\"\r\n                      name=\"name\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Form.Control\r\n                      placeholder=\"Company Name\"\r\n                      ref={companyNameRef}\r\n                      name=\"companyName\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div>\r\n                <div>\r\n                  <Form.Control\r\n                    placeholder=\"Title\"\r\n                    ref={titleRef}\r\n                    name=\"title\"\r\n                  />\r\n                </div>\r\n                <hr />\r\n                <div style={{ fontSize: \"80%\" }}>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    ref={bodyRef}\r\n                    name=\"body\"\r\n                    rows=\"10\"\r\n                    placeholder=\"Start Writing here . . .\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <Button type=\"submit\" className=\"btn btn-primary m-1\">\r\n                  Post\r\n                </Button>\r\n                <Button\r\n                  className=\"btn btn-danger m-1\"\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Card.Footer>\r\n          </Card>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SearchContext, SearchValueContext } from \"../App\";\r\nimport \"./header.css\";\r\nexport const Header = () => {\r\n  const searchRef = useRef();\r\n  const search = useContext(SearchContext);\r\n  const searchValue = useContext(SearchValueContext);\r\n  return (\r\n    <>\r\n      <Navbar expand=\"lg\" className=\"header d-flex justify-content-between\">\r\n        <Navbar.Brand>\r\n          <Link to=\"/home\">Social Media</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/create\" className=\"header-links btn btn-outline-primary\">\r\n              Create Post\r\n            </Link>\r\n            <Link to=\"/liked\" className=\"header-links btn btn-outline-success\">\r\n              Liked Posts\r\n            </Link>\r\n            <Link\r\n              to=\"/disliked\"\r\n              className=\"header-links btn btn-outline-danger\"\r\n            >\r\n              Disliked Posts\r\n            </Link>\r\n          </Nav>\r\n          <Form className=\"d-flex\">\r\n            <FormControl\r\n              type=\"text\"\r\n              ref={searchRef}\r\n              onChange={() => search(searchRef.current.value)}\r\n              placeholder=\"Search by anything . . .\"\r\n              className=\"mr-sm-2\"\r\n            />\r\n            {/* <Button variant=\"outline-success\">Search</Button> */}\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./loader.css\";\r\nexport const Loader = () => {\r\n  return (\r\n    <>\r\n      <div className=\"loader-body\">\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Container, Card } from \"react-bootstrap\";\r\nimport { Loader } from \"./Loader\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ThumbDownAltOutlinedIcon from \"@material-ui/icons/ThumbDownAltOutlined\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\r\nimport \"./posts.css\";\r\nimport {\r\n  AllPostContext,\r\n  DeletePostContext,\r\n  DislikePostContext,\r\n  LikePostContext,\r\n  LoadingContext,\r\n  SearchValueContext,\r\n} from \"../App\";\r\nimport { useHistory } from \"react-router\";\r\nexport const Posts = ({ showOnly }) => {\r\n  const history = useHistory();\r\n  const loading = useContext(LoadingContext);\r\n  let allPosts = useContext(AllPostContext);\r\n  const likePost = useContext(LikePostContext);\r\n  const dislikePost = useContext(DislikePostContext);\r\n  const searchValue = useContext(SearchValueContext);\r\n  const deletePost = useContext(DeletePostContext);\r\n  if (allPosts) {\r\n    if (showOnly == \"Liked\") {\r\n      allPosts = allPosts.filter((post) => post.liked);\r\n    } else if (showOnly == \"Disliked\") {\r\n      allPosts = allPosts.filter((post) => post.disliked);\r\n    }\r\n  }\r\n  const getHighlightedText = (text, highlight) => {\r\n    if (highlight) {\r\n      const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n      return (\r\n        <span>\r\n          {parts.map((part, i) => (\r\n            <span\r\n              key={i}\r\n              style={\r\n                part.toLowerCase() === highlight.toLowerCase()\r\n                  ? { backgroundColor: \"yellow\" }\r\n                  : {}\r\n              }\r\n            >\r\n              {part}\r\n            </span>\r\n          ))}\r\n        </span>\r\n      );\r\n    } else {\r\n      return text;\r\n    }\r\n  };\r\n  const createPosts = (post, index) => {\r\n    return (\r\n      <>\r\n        <div className=\"container-div d-flex justify-content-center\">\r\n          <Card className=\"post-card m-3\">\r\n            <Card.Header>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div>\r\n                    <AccountCircleOutlinedIcon style={{ fontSize: \"250%\" }} />\r\n                  </div>\r\n                  <div className=\"mx-2\">\r\n                    <div>\r\n                      <b>{getHighlightedText(post.name, searchValue)}</b>\r\n                    </div>\r\n                    <div style={{ fontSize: \"80%\" }}>\r\n                      Employee at{\" \"}\r\n                      {getHighlightedText(post.companyName, searchValue)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      history.push(\"/create\", { postId: post.id });\r\n                    }}\r\n                  >\r\n                    <EditIcon\r\n                      className=\"mx-2\"\r\n                      style={{ fontSize: \"200%\", color: \"gray\" }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => deletePost(post.id)}\r\n                  >\r\n                    <DeleteRoundedIcon\r\n                      className=\"mx-2\"\r\n                      style={{ fontSize: \"200%\", color: \"#dc3545\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div>\r\n                <div>\r\n                  <b>{getHighlightedText(post.title, searchValue)}</b>\r\n                </div>\r\n                <hr />\r\n                <div style={{ fontSize: \"80%\" }}>\r\n                  {getHighlightedText(post.body, searchValue)}\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div\r\n                  // className={\r\n                  //   post.liked ? \"btn btn-success\" : \"btn btn-outline-success\"\r\n                  // }\r\n                  onClick={() => likePost(post.id)}\r\n                >\r\n                  {post.liked ? (\r\n                    <ThumbUpAltIcon\r\n                      style={{ fontSize: \"250%\", color: \"#198754\" }}\r\n                    />\r\n                  ) : (\r\n                    <ThumbUpAltOutlinedIcon style={{ color: \"gray\" }} />\r\n                  )}\r\n                </div>\r\n                <div onClick={() => dislikePost(post.id)}>\r\n                  {post.disliked ? (\r\n                    <ThumbDownIcon\r\n                      style={{ fontSize: \"250%\", color: \"#dc3545\" }}\r\n                    />\r\n                  ) : (\r\n                    <ThumbDownAltOutlinedIcon style={{ color: \"gray\" }} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Card.Footer>\r\n          </Card>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      {!loading && (\r\n        <Container className=\"\">{allPosts.map(createPosts)}</Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"../../Common/Header\";\r\nimport { Posts } from \"../../Common/Posts\";\r\nexport const Disliked = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Posts showOnly={\"Disliked\"} />\r\n    </div>\r\n  );\r\n};\r\n","import { CloseOutlined } from \"@material-ui/icons\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Alert, Modal, Button } from \"react-bootstrap\";\r\nimport { ChangeMessageContext, MessageContext } from \"../../App\";\r\nimport { Header } from \"../../Common/Header\";\r\nimport { Posts } from \"../../Common/Posts\";\r\nexport const Home = () => {\r\n  const message = useContext(MessageContext);\r\n  const changeMessage = useContext(ChangeMessageContext);\r\n  const [show, setShow] = useState(true);\r\n  const handleClose = () => {\r\n    changeMessage(\"\");\r\n    setShow(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {message && (\r\n        <>\r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Body>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <Modal.Title>{message}</Modal.Title>\r\n                <button className=\"btn\" onClick={handleClose}>\r\n                  <CloseOutlined />\r\n                </button>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </>\r\n      )}\r\n      <Posts showOnly={\"All\"} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"../../Common/Header\";\r\nimport { Posts } from \"../../Common/Posts\";\r\nexport const Liked = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Posts showOnly={\"Liked\"} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { CreatePost } from \"./Pages/Create/CreatePost\";\nimport { Disliked } from \"./Pages/Disliked/Disliked\";\nimport { Home } from \"./Pages/Home/Home\";\nimport { Liked } from \"./Pages/Liked/Liked\";\nexport const AllPostContext = React.createContext();\nexport const AllUsersContext = React.createContext();\nexport const LoadingContext = React.createContext();\nexport const LikePostContext = React.createContext();\nexport const DislikePostContext = React.createContext();\nexport const SearchContext = React.createContext();\nexport const SearchValueContext = React.createContext();\nexport const DeletePostContext = React.createContext();\nexport const ChangePostContext = React.createContext();\nexport const MessageContext = React.createContext();\nexport const ChangeMessageContext = React.createContext();\nfunction App() {\n  const [allUsers, setAllUsers] = useState();\n  const [allPosts, setAllPosts] = useState();\n  const [copyOfPosts, setCopyOfPosts] = useState();\n  const [loading, setLoading] = useState(true);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [maxId, setMaxId] = useState(100);\n  const fetchData = async () => {\n    const users = await fetchAllUsers();\n    const posts = await fetchAllPosts(users);\n    return { users, posts };\n  };\n  const fetchAllUsers = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"GET\",\n    });\n    const json = await res.json();\n    return json;\n  };\n  const fetchAllPosts = async (users) => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"GET\",\n    });\n    const json = await res.json();\n    let posts = [];\n    json.forEach((post) => {\n      users.forEach((user) => {\n        if (post.userId == user.id) {\n          posts.push({\n            ...post,\n            liked: false,\n            disliked: false,\n            name: user.name,\n            companyName: user.company.name,\n          });\n        }\n      });\n    });\n    return posts;\n  };\n  useEffect(() => {\n    let mounted = true;\n    fetchData().then(({ posts, users }) => {\n      if (mounted) {\n        setAllPosts(posts);\n        setCopyOfPosts(posts);\n        setAllUsers(users);\n        setLoading(false);\n      }\n    });\n    return () => (mounted = false);\n  }, []);\n  const handleLikePost = (postId) => {\n    const currentPosts = allPosts;\n    currentPosts.forEach((post) => {\n      if (post.id == postId) {\n        post.liked = !post.liked;\n        post.disliked = false;\n      }\n    });\n    setAllPosts([...currentPosts]);\n  };\n  const handleDislikePost = (postId) => {\n    const currentPosts = allPosts;\n    currentPosts.forEach((post) => {\n      if (post.id == postId) {\n        post.liked = false;\n        post.disliked = !post.disliked;\n      }\n    });\n    setAllPosts([...currentPosts]);\n  };\n  const handleSearch = (searchValue) => {\n    setSearchValue(searchValue);\n    let currentAllPosts = [];\n    let reg = new RegExp(searchValue, \"i\");\n    copyOfPosts.forEach((post) => {\n      if (\n        post.title.match(reg) ||\n        post.name.match(reg) ||\n        post.companyName.match(reg) ||\n        post.body.match(reg)\n      ) {\n        currentAllPosts.push(post);\n      }\n    });\n    setAllPosts([...currentAllPosts]);\n  };\n  const deletePost = async (postId) => {\n    // setLoading(true);\n    // const res = await fetch(\n    //   `http://jsonplaceholder.typicode.com/posts/${postId}`,\n    //   { method: \"DELETE\" }\n    // );\n    // const json = await res.json();\n    // console.log(json);\n    const currentAllPosts = [];\n    allPosts.forEach((post) => {\n      if (post.id != postId) {\n        currentAllPosts.push(post);\n      }\n    });\n    setAllPosts(currentAllPosts);\n    setCopyOfPosts(currentAllPosts);\n    // setLoading(false);\n  };\n  const changeMessage = (message) => {\n    setMessage(message);\n  };\n  const changePost = (event, postId) => {\n    let currentAllPosts = allPosts;\n    event.preventDefault();\n    const name = event.target[0].value;\n    const companyName = event.target[1].value;\n    const title = event.target[2].value;\n    const body = event.target[3].value;\n    console.log(postId);\n    if (!postId) {\n      currentAllPosts.unshift({\n        id: maxId + 1,\n        name,\n        companyName,\n        title,\n        body,\n      });\n      setMaxId(maxId + 1);\n      setMessage(\"New Post Added Successfully\");\n    } else {\n      currentAllPosts.forEach((post) => {\n        if (post.id == postId) {\n          post.name = name;\n          post.companyName = companyName;\n          post.title = title;\n          post.body = body;\n        }\n      });\n      setMessage(\"Post updated Successfully\");\n    }\n    console.log(currentAllPosts);\n    setAllPosts(currentAllPosts);\n    setCopyOfPosts(currentAllPosts);\n  };\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <LoadingContext.Provider value={loading}>\n            <MessageContext.Provider value={message}>\n              <ChangeMessageContext.Provider value={changeMessage}>\n                <AllPostContext.Provider value={allPosts}>\n                  <DeletePostContext.Provider value={deletePost}>\n                    <LikePostContext.Provider value={handleLikePost}>\n                      <DislikePostContext.Provider value={handleDislikePost}>\n                        <SearchContext.Provider value={handleSearch}>\n                          <SearchValueContext.Provider value={searchValue}>\n                            <Route path=\"/home\" component={Home} />\n                            <Route path=\"/liked\" component={Liked} />\n                            <Route path=\"/disliked\" component={Disliked} />\n                            <ChangePostContext.Provider value={changePost}>\n                              <Route path=\"/create\" component={CreatePost} />\n                            </ChangePostContext.Provider>\n                            <Route path=\"/\" exact component={Home} />\n                          </SearchValueContext.Provider>\n                        </SearchContext.Provider>\n                      </DislikePostContext.Provider>\n                    </LikePostContext.Provider>\n                  </DeletePostContext.Provider>\n                </AllPostContext.Provider>\n              </ChangeMessageContext.Provider>\n            </MessageContext.Provider>\n          </LoadingContext.Provider>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}